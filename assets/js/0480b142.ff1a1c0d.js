"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[836],{3584:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return c},default:function(){return p}});var a=n(7462),i=n(3366),o=(n(7294),n(3905)),r=["components"],s={sidebar_position:3,sidebar_label:"FAQ"},l="FAQ",d={unversionedId:"faq",id:"faq",isDocsHomePage:!1,title:"FAQ",description:"How do I apply the replace changes listed by the JSON output of diff command ?",source:"@site/docs/faq.md",sourceDirName:".",slug:"/faq",permalink:"/i18n-tools/docs/faq",editUrl:"https://github.com/jy95/i18n-tools/edit/master/website/docs/faq.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"FAQ"},sidebar:"tutorialSidebar",previous:{title:"Diff",permalink:"/i18n-tools/docs/commands/diff"}},c=[{value:"How do I apply the replace changes listed by the JSON output of diff command ?",id:"how-do-i-apply-the-replace-changes-listed-by-the-json-output-of-diff-command-",children:[]}],f={toc:c};function p(e){var t=e.components,n=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"faq"},"FAQ"),(0,o.kt)("h2",{id:"how-do-i-apply-the-replace-changes-listed-by-the-json-output-of-diff-command-"},"How do I apply the replace changes listed by the JSON output of diff command ?"),(0,o.kt)("p",null,"Simply with a Nodejs script :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const _ = require('lodash');\nconst path = require('path');\nconst fs = require('fs').promises;\n\ntry {\n    // TODO replace with path to your file in develop or whatever branch\n    let originalFilePath = path.resolve(__dirname, \"fr.json\");\n    let jsonData = await fs.readFile(originalFilePath, 'utf8');\n    let currentObj = JSON.parse(jsonData);\n\n    // TODO replace with path to the file generated by diff command\n    let changesFilePath = path.resolve(__dirname, \"diff_fr.json\");\n    let jsonData2 = await fs.readFile(changesFilePath, 'utf8');\n    let changesFile = JSON.parse(jsonData2);\n    let changes = changesFile.changes;\n\n    // Proper variable for that\n    let result = Object.assign({}, currentObj);\n\n    // Add changed values\n    // (Feel free to edit the file generated by diff command if you want to override some changes)\n    for(let modifiedField of changes.filter(c => [\"REPLACED\"].includes(c.type)) ) {\n        _.set(result, modifiedField.key, modifiedField.newValue);\n    }\n\n    // write result\n    // TODO Add a path for destination\n    await fs.writeFile(\"\", JSON.stringify(result, null, 4));\n\n} catch(err) {\n    console.warn(\"Something bad happend\");\n    console.error(err);\n    process.exit(1);\n}\n")))}p.isMDXComponent=!0}}]);